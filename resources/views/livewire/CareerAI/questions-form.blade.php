@push('cssContent')
<link rel="stylesheet" href="{{asset('careerAI-css/questions-form.css')}}">
@endpush
<div>
    <div x-data="jobDesc()" class="min-h-screen flex flex-col justify-between">
        <!-- Page Content -->
        <div class="form-container">
            <h3 class="text-end mb-4">ุงุฑูุน ุณูุฑุชู ุงูุฐุงุชูุฉ ูุฃุฏุฎู ุงููุณูู ุงููุธููู</h3>

            <!-- Use Alpine bindings and events -->
            <form @submit.prevent="saveData">
                <!-- CV File -->
                <div class="mb-3">
                    <label class="form-label">ุงุฑูุน ุณูุฑุชู ุงูุฐุงุชูุฉ (PDF ุฃู DOCX):</label>
                    <input type="file" class="form-control" title="ุงุฑูุน ุณูุฑุชู ุงูุฐุงุชูุฉ" @change="validateFile">
                    <div x-text="errors.cv" class="text-danger"></div>
                </div>

                <!-- Job Title -->
                <div class="mb-3">
                    <label class="form-label">ุงููุณูู ุงููุธููู ุงููุทููุจ:</label>
                    <input type="text" class="form-control" placeholder="ูุซูุงู: ูููุฏุณ ุจุฑูุฌูุงุช" x-model="jobTitle">
                    <div x-text="errors.title" class="text-danger"></div>
                </div>

                <!-- Job Description (Generated) -->
                <div class="mb-4">
                    <label class="form-label">ูุตู ุงููุธููุฉ:</label>
                    <button type="button" class="btn btn-dark w-100 mb-3" @click="generateDescription"
                        :disabled="isLoading">
                        <!-- Non-loading state -->
                        <span x-show="!isLoading">
                            <i class="fas fa-file-alt"></i>ุงูุดุงุก ูุตู ุงููุธููุฉ
                        </span>

                        <!-- Loading state -->
                        <span x-show="isLoading">
                            <i class="fa-solid fa-hourglass-end"></i>
                            ุฌุงุฑู ุงูุชูููุฏ...
                        </span>
                    </button>

                    <textarea class="form-control" rows="4" placeholder="ูุซูุงู: ูุณุคูู ุนู ุชุทููุฑ ุงูุชุทุจููุงุช ุงูุจุฑูุฌูุฉ"
                        x-model="jobDescription"></textarea>
                    <div x-text="errors.desc" class="text-danger"></div>
                </div>

                <!-- Generate Description Button -->

                <!-- Submit (Save) Button -->
                <button type="submit" class="btn btn-primary w-100">
                    ุงูุงูุชูุงู ุฅูู ุงูุฎุทูุฉ ุงูุชุงููุฉ
                </button>
            </form>
        </div>

        <!-- Footer -->
        <footer class="footer bg-dark text-light mt-auto">
            <div class="container-fluid">
                <p>ยฉ 2025 Falcons. ุฌููุน ุงูุญููู ูุญููุธุฉ.</p>
                <p>ุตููู ููุณุงุนุฏุชู ุนูู ุงููุฌุงุญ ูู ุญูุงุชู ุงูููููุฉ.</p>
            </div>
        </footer>
    </div>

    <!-- Alpine.js Logic -->
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('jobDesc', () => ({
                API_KEY: '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',
                MODEL: 'deepseek/deepseek-r1:free',

                jobTitle: '',
                jobDescription: '',
                isLoading: false,
                errors: {
                    cv: null,
                    title: null,
                    desc: null
                },

                promptTemplate(jobTitle) {
                    return `ุฃูุดุฆ ูุตููุง ูุธููููุง ุจุงูุนุฑุจูุฉ ูููุธููุฉ: "${jobTitle}":โโโโโโโโโโโโโโโโโโโโโโโ
๐ฏ ุงูููุงู ุงูุฃุณุงุณูุฉ
โโโโโโโโโโโโโโโโโโโโโโโ
โข ุชูููุฐ [ุงูููุงู ุงูุชุดุบูููุฉ ุงูููููุฉ]
โข ุชุทููุฑ [ุงูููุงุท ุงูุฑุฆูุณูุฉ ููุชุญุณูู]
โข ุชูุณูู [ููุน ุงูุชุนุงูู ูุน ุงููุฑู]

โโโโโโโโโโโโโโโโโโโโโโโ
๐ป ุงููุชุทูุจุงุช ุงูุชูููุฉ
โโโโโโโโโโโโโโโโโโโโโโโ
๐น ุชูููุงุช ูุชูุฏูุฉ:
๐น ุฃุณุงุณูุงุช ุถุฑูุฑูุฉ:

โโโโโโโโโโโโโโโโโโโโโโโ
๐ค ุงูููุงุฑุงุช ุงูุดุฎุตูุฉ
โโโโโโโโโโโโโโโโโโโโโโโ
โ ุฅุฏุงุฑุฉ ุงูุงุฌุชูุงุนุงุช ุงููุนูุงูุฉ
โ ููุงุฏุฉ ูุฑูู ูููู ูู [ุนุฏุฏ]+ ุฃุนุถุงุก
โ ุญู ุงููุฒุงุนุงุช ุฎูุงู [ุฅุทุงุฑ ุฒููู]

โโโโโโโโโโโโโโโโโโโโโโโ
๐ ุงููุคููุงุช ูุงูุดุฑูุท
โโโโโโโโโโโโโโโโโโโโโโโ
โ ุจูุงููุฑููุณ ูู [ุงูุชุฎุตุต ุงูุฏููู]
โ ุฎุจุฑุฉ [ุนุฏุฏ] ุณููุงุช ูู [ูุฌุงู ุงูุฎุจุฑุฉ]
โ ุดูุงุฏุฉ [ุงุณู ุงูุดูุงูุฉ] (ุงุฎุชูุงุฑู)

โโโโโโโโโโโโโโโโโโโโโโโ
โจ ููุงุญุธุงุช ูุงูุฉ
โโโโโโโโโโโโโโโโโโโโโโโ
โถ ุงุณุชุฎุฏู ุฃูุนุงู ูุซู: ููุญููููุ ููููููุฐุ ููุทูููุฑ
โท ุชุฌูุจ ุงููุตุทูุญุงุช ุงูุนุงูุฉ
โธ ุฑูุฒ ุนูู ุงูุฃุฏูุงุช ุงููุณุชุฎุฏูุฉ ูุนูููุง ุจุงููุฌุงู
โ ุฅุฐุง ูุงูุช ุงููุธููุฉ ุบูุฑ ูุนุฑููุฉุ ุงุทูุจ ูู ุงููุณุชุฎุฏู ุชูุถูุญูุง ุจุฏูุงู ูู ุฅูุดุงุก ูุตู ุนุงู`;
                },

                // Generate Job Description from API
                async generateDescription() {
                    this.clearErrors();

                    if (!this.jobTitle) {
                        this.errors.title = 'ูุฑุฌู ุฅุฏุฎุงู ุงุณู ุงููุธููุฉ ุฃููุงู';
                        return;
                    }

                    try {
                        this.isLoading = true;
                        const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
                            method: 'POST',
                            headers: {
                                'Authorization': `Bearer ${this.API_KEY}`,
                                'Content-Type': 'application/json',
                                'HTTP-Referer': window.location.href,
                                'X-Title': 'Job Description Generator'
                            },
                            body: JSON.stringify({
                                model: this.MODEL,
                                messages: [
                                    { role: 'user', content: this.promptTemplate(this.jobTitle) }
                                ]
                            })
                        });

                        const data = await response.json();
                        console.log(data);
                        const generatedText = data.choices?.[0]?.message?.content || '';
                        if (this.isUnknownJob(generatedText)) {
                            this.errors.desc = 'ุนุฐุฑูุงุ ูู ูุชููู ูู ุงูุชุนุฑู ุนูู ูุฐู ุงููุธููุฉ. ูุฑุฌู ุฅุฏุฎุงู ุงุณู ูุธููุฉ ุฃูุถุญ ุฃู ุชูุฏูู ุงููุฒูุฏ ูู ุงูุชูุงุตูู.';
                            this.jobDescription = '';
                        } else {
                            this.jobDescription = generatedText;
                        }
                        console.log(this.jobDescription);
                    }
                    catch (error) {
                        this.errors.desc = `ุฎุทุฃ ูู ุงูุชูููุฏ: ${error.message}`;
                    } finally {
                        this.isLoading = false;
                    }
                },

                // Basic check if the API returned an "unknown" job
                isUnknownJob(text) {
                    const unknownIndicators = [
                        /\[.*?\]/g, // ุงูุชุดุงู ุงูุฃููุงุณ ุงููุงุฑุบุฉ
                        /\.\.\./g,  // ุงูุชุดุงู ุงูููุงุท ุงููุชุชุงููุฉ
                        /ุบูุฑ ูุนุฑูู/gi,
                        /ูุฑุฌู ุชูุถูุญ/gi,
                        /ุงูููุงู ุงูุชุดุบูููุฉ ุงูููููุฉ/g
                    ];
                    return unknownIndicators.some(pattern => pattern.test(text));
                },

                // Validate File Input
                validateFile(e) {
                    const file = e.target.files[0];
                    this.errors.cv = null;

                    if (!file) return;

                    const validTypes = [
                        'application/pdf',
                        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
                    ];
                    const maxSize = 2 * 1024 * 1024; // 2MB

                    if (!validTypes.includes(file.type)) {
                        this.errors.cv = 'ููุน ุงูููู ุบูุฑ ูุฏุนูู';
                        e.target.value = '';
                    } else if (file.size > maxSize) {
                        this.errors.cv = 'ุงูุญุฌู ุงูุฃูุตู 2MB';
                        e.target.value = '';
                    }
                },

                // Save data to localStorage and go to next page
                saveData() {
                    this.clearErrors();

                    if (!this.jobTitle || !this.jobDescription) {
                        alert('ูุฑุฌู ุฅููุงู ุฌููุน ุงูุญููู ุงููุทููุจุฉ');
                        return;
                    }

                    // Store data in localStorage
                    localStorage.setItem('jobData', JSON.stringify({
                        title: this.jobTitle,
                        description: this.jobDescription
                    }));

                    // Navigate to the next page
                    window.location.href = 'http://127.0.0.1:8000/generateQuestines';
                },

                clearErrors() {
                    this.errors = { cv: null, title: null, desc: null };
                }
            }));
        });
    </script>
</div>
